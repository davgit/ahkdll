AutoHotkey_N, AutoHotkey.dll
Introduction

    * AutoHotkey.dll is a shared library for AutoHotkey and AutoHotkey_L maintained by Naveen Garg.
    * AutoHotkey_N is a custom build of AutoHotkey incorporating the changes introduced by the dll.
    * For a full list of changes, see Changelog
    * Discuss AutoHotkey_N at the AutoHotkey Community Forums
    * Thanks to Chris Mallett, Lexikos, Titan, and the autohotkey community. 

Features

    * Embed the autohotkey interpreter in another program such as python or lisp
      int ahkdll(char *fileName, char *option, char *parameter)
    * dynamically add #include files in the dll with addfile()
      _declspec(dllexport) int addFile(str file, uchar aAllowDuplicateInclude, uchar aIgnoreLoadFailure)
    * import new scripts or replace loaded script with import(file...)
    * Multithreading by loading multiple copies of the dll under different names. Also, see HotkeyIt's work
    * Direct access to built in variables BIV
    * make application / webserver frameworks possibe using apache modules such as modpython

Functions

    * addfile
    * ahkFunction
    * ahkLabel
    * ahkdll
    * ahkgetvar
    * alias
    * cacheEnable
    * fileappend
    * filereadline
    * findfunc
    * getTokenValue
    * getVar
    * import
    * numput
    * static

Download

    * AutoHotkey48L30N10: AutoHotkey48L30_N10.zip, source
    * old versions
    * based on Chris' main branch: V1.0.48.3AutoHotkeyC48N8.zip source
    * based on AutoHotkeyV1.0.46L13 AutoHotkeyL13N6.zip source

Note

    * License: GPLv2
    * No Warranty. Like all free software, use at your own risk

Todo

    * Allow Hotkeys to take functions (and pointers to functions) in addition to labels as targets
    * HTML Help file
    * self hosting parser
    * linux port



CHANGELOG
Revision 10

    * EXPORT int ahkKey(char *keyname)
      ahkKey() simulates key events that are not ignored by autohotkey itself.
      So triggering hotkeys is now possible without gosub or goto...
      AutoHotkey.dll can now receive x11 events under ahkx on linux
    * EXPORT int ahkassign(char *name, char *value)
      assigns a string to a variable in the dll from the host.

Revision 9

    * created versions based on Chris' main branch 1.0.48.3 as well as the old 1.0.46L13 branch
    * Added builtin FindFunc() to facilitate use of Lexikos' LowLevel.ahk and code.ahk, see here
    * Updated addfile(), so when called with 2 as the 3rd parameter.
      For ex. addfile("somefile.ahk", 1, 2)
      simpleheap memory used by late included files upto this point is freed. Hotkeys, labels, and functions from the first call to addfile are retained.
      If you want to create hotkeys in later include files that have already been defined, use a dynamic function call with the Hotkey command:
      Hotkey, label, hotkey
    * also see post 

Revision 8

    * modified fileappend, to send output to stderr, with "stderr" is specified as filename.
    * modified FileReadLine, to accept stdin for file. see this post
    * fixed import(...) to return a line pointer to the first newly added line
    * modified numget and numput to take numerical arguments for type in addition to the dllcall types. (number != dlltypesize)
    * made Lexikos' LowLevel machine code functions builtins: see this post
    * modified project file with compile settings for dll and exe for easier merging with main branch and AutoHotkey_L.

Revision 7

    * Merged with AutoHotkey v.1.0.48.03_L30
    * in addition to AutoHotkey.dll, created AutoHotkey_N.exe with
    * exported functions to access built in variables: ebiv.cpp
    * added function:
    * linepointer = Import(filename, aAllowDuplicateInclude = false, aIgnoreLoadFailure = false).
    * linepointer is a pointer to the first line in the imported script
    * If the 3rd parameter is > 1, then all currently loaded lines, functions, and labels are ignored starting now.
    * If you are going to reload particular hotkeys, use the Hotkey command rather than Hotkey labels.
    * i.e.
    * Hotkey, F2, mylabel, on ; this can be repeated in future import(script) calls
    * not
    * F2::msgbox ; this will crash the script if you import another script that uses the same hotkey label

Revision 6

    * V0.6 Merged with AutoHotkey v.1.0.48.02_L27
    * Multi-threading: Examples

Revision 5

    * V0.5 dynamically load #include scripts (experimental)
    * int addFile(str file, uchar aAllowDuplicateInclude, uchar aIgnoreLoadFailure)

Revision 4

    * V0.4 parse a line containing an ahk command or expression
    * linePointer := int createLine(char *line, int actiontype) removed in R7

Revision 3

    * V0.3. added support for option: /Debug see Lexikos' Debugger

Revision 2

    * V0.2: Merged with AutoHotkey_1.0.48_L26
